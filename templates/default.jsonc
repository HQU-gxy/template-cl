{
  "name": "my template",
  "variables": [
    {
      "name": "date",
      /**
       * don't make too many sense for clojure
       * use [`clojure.spec`](https://clojure.org/about/spec) or [`malli`](https://github.com/metosin/malli) instead
       */
      "type": "list[datetime]",
      // @type: fn; an full qualified lisp expression with one parameter that returns a boolean value.
      "verifier": "(fn [x] (if (seq? x) (every? #(instance? java.time.LocalDate %) x) false))",
      "json-path": "$.operateList[*].total",
      // @type: fn; an full qualified lisp expression with one parameter that returns a processed value. (could be identity)
      "postprocess": "(fn [coll] (map #(java.time.LocalDate/parse %) coll))",
      "source": "patient"
    }
  ],
  "sources": [
    {
      "patient": {
        /**
         * the type of source
         * could be a http endpoint, a file, or a database
         */
        "type": "json",
        "path": "data/data.json",
      },
      "operations":{
        "type": "sql-adapter",
        "url": "http://localhost:3306/api",
        "parameters": [
            {
                "field": "operateList",
                // a SQL query to get the [operateList] data
                "query": "select * from Operations"
            }
        ]
      }
    }
  ],
  "content": [
    {
      "tagName": "p",
      "text": "本期中出院病例${num_patient}例。手术人数${num_operation}人，四级手术${num_operation_4}人，微创手术${num_operation_micro}人。CMI值${CMI}，其中 CMI 小于1的病人数有${query(CMI<1)}人，占比${query(CMI<1)/num_patient}；1-2的病人数${query(CMI > 1 && CMI < 2)}人，占比${query(CMI > 1 && CMI < 2) / num_patient};2-5的病人数${num_CIM_2_5 := query(CMI > 2 && CMI < 5)}人，占比${num_CIM_2_5 / num_patient};大于5的病人数${num_CIM_gt_5 := query(CMI > 5)}人,占比${num_CIM_gt_5 / num_patient}。总体来说大于2的病人数${num_CIM_gt_2 := query(CMI > 2)}人，占比${num_CIM_gt_2 / num_patient}%，有提升空间。"
    },
  ]
}